#include<stdio.h>
int fbnq(int n)
{	int i,a[999],sum;
	a[0]=0;
	a[1]=1;
	for(i=2;i<=n;i++)
	{	a[i]=a[i-1]+a[i-2];
	}
	sum=a[n];
	return(sum);
}
int main()
{	int n;
	scanf("%d",&n);
	printf("%d",fbnq(n));
	return 0;
}
/*题目描述
斐波那契数列的定义如下：

F_0=0
F_1=1
F_n = F_{n-1}+ F_{n-2}
也就是说，斐波那契数列由0 和1开始，之后的每一项是之前的两数相加，例如:

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233,...

要求用函数实现，求斐波那契数列第n项的值。（不能用递归）

 

输入
n

输出
斐波那契数列在第n项的值

样例输入
8
样例输出
21*/
